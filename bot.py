import logging
import sqlite3 as sql
from random import randint

from aiogram import Bot, Dispatcher, executor, types
from btn import start_btn
from inline import *
import random

API_TOKEN = '6653648774:AAHiSM34oTeg6TXf5-RLQxjJKIBEPCERBis'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

balance_input_ask = False

global con
global cur
con = sql.connect("my_first_database.db")
cur = con.cursor()
cur.execute("""CREATE TABLE IF NOT EXISTS users(
        id BIGINT,
        balance BIGINT
        )""")
con.commit()


@dp.message_handler(commands=['start'])
async def start_bot_handler(message: types.Message):
    global balance2
    global user_id
    user_id = message.from_user.id
    cur.execute(f"SELECT id FROM users WHERE id = '{message.from_user.id}'")
    if cur.fetchone() is None:
        cur.execute(f"INSERT INTO users VALUES (?, ?)", (message.from_user.id, 0))
        con.commit()
        balance2 = 0
    else:
        for i in cur.execute(f"SELECT balance FROM users WHERE id = '{message.from_user.id}'"):
            balance2 = i[0]

@dp.message_handler()
async def msg_handler(message: types.Message):
    global how_much
    msg = message.text
    if msg == 'üìÇ –ù–∞—à–∏ —É—Å–ª—É–≥–∏':
        products_btn = await products_inline_btn()
        await message.answer('üåê –ù–∞—à–∏ —É—Å–ª—É–≥–∏', reply_markup=products_btn)
    elif msg == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':
        profile_btn = await start_inline_btn()
        await message.answer(f'üë§ –í–∞—à –ü—Ä–æ—Ñ–∏–ª—å\n\nüÜî ID: {message.from_user.id}\nüí∞ –ë–∞–ª–∞–Ω—Å: {balance2} —Ä—É–±.\n\n–†–µ—Ñ.—Å—Å—ã–ª–∫–∞: https://t.me/Osagooa_bot?start={message.from_user.id}', reply_markup=profile_btn)
    elif msg == '‚òéÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
        await message.answer('‚ú≥Ô∏è –ì–ª.–ê–¥–º–∏–Ω –±–æ—Ç–∞: @osagomaksc')
    elif msg == 'üí•–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª':
        await message.answer('‚ú≥Ô∏è –ù–∞—à –∫–∞–Ω–∞–ª: @osagomak')
    elif balance_input_ask == True:
        how_much = int(msg)
        balance_btn = await balance_inline_btn()
        await message.answer(f'‚úÖ –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å–æ–∑–¥–∞–Ω (—É –≤–∞—Å 15 –º–∏–Ω—É—Ç —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ {msg}—Ä—É–±.)', reply_markup=balance_btn)



@dp.callback_query_handler(text_contains='profile:')
async def profile_choice(call: types.CallbackQuery):
    global balance_input_ask
    choice = call.data.split(':')[1]
    if choice == 'addbalance':
        await call.message.edit_text('‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É (–º–∏–Ω–∏–º—É–º 100 —Ä—É–±.):')
        balance_input_ask = True

@dp.callback_query_handler(text_contains='balance:')
async def balance_choice(call: types.CallbackQuery):
    global balance2
    choice = call.data.split(':')[1]
    if choice == 'back':
        await call.message.delete()
    elif choice == 'pay':
        balance2 = balance2 + how_much
        cur.execute(f"UPDATE users SET balance = {balance2} WHERE id = {user_id}")
        con.commit()

@dp.callback_query_handler(text_contains='products:')
async def balance_choice(call: types.CallbackQuery):
    choice = call.data.split(':')[1]
    if choice == 'back':
        products_btn = await products_inline_btn()
        await call.message.edit_text('üåê –ù–∞—à–∏ —É—Å–ª—É–≥–∏', reply_markup=products_btn)
    elif choice == 'osago':
        osago_btn = await osago()
        await call.message.edit_text('üìë–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –ø–æ–ª–∏—Å –û–°–ê–ì–û —Å –∑–∞–Ω–µ—Å–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ VIN –≤ –±–∞–∑—É –†–°–ê.\n\n–û—Ñ–æ—Ä–º–∏–º –û–°–ê–ì–û –¥–ª—è –õ–Æ–ë–û–ì–û –£–ß–ï–¢–ê.\n–ë–µ–ª–∞—Ä—É—Å—å üáßüáæ –ê—Ä–º–µ–Ω–∏—è üá¶üá≤ –†–æ—Å—Å–∏—è üá∑üá∫  –∏ —Ç–¥.\n\n–ù–∞ –ª—é–±–æ–π –≤–∏–¥ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:\n–ú–æ—Ç–æ—Ü–∏–∫–ª üèç –ê–≤—Ç–æ–º–æ–±–∏–ª—å üöô\n–¢—Ä–∞–∫—Ç–æ—Ä üöú  –ê–≤—Ç–æ —Å –ø—Ä–∏—Ü–µ–ø–æ–º üöó\n–ì—Ä—É–∑–æ–≤–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å üöõ\n–ê —Ç–∞–∫ –∂–µ —Ç–∞–∫—Å–∏ üöï\n\n‚ùóÔ∏è–í—Å–µ –ï-–û–°–ê–ì–û –±–µ–∑ –≤—ã–ø–ª–∞—ÇÔ∏è –ø—Ä–∏ –î–¢–ü\n\n‚è≥–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç 30 –º–∏–Ω –¥–æ 2—Ö —á–∞—Å–æ–≤ –ø—Ä–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ –†–°–ê, –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–±–æ—Ç—ã –±–∞–∑ –ï–ê–ò–°–¢–û –∏ –†–°–ê\n\n–°–≤–æ–π –∑–∞–∫–∞–∑ –í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤\n\nüéÅ–í –∫–∞—á–µ—Å—Ç–≤–µ –±–æ–Ω—É—Å–∞, –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å–µ –ø–æ–ª–∏—Å—ã –≤ –±–ª–∞–Ω–∫–µ –±—É–¥—É—Ç –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô –ù–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –¢–°', reply_markup=osago_btn)
    elif choice == 'inspection':
        inspection_btn = await inspection()
        await call.message.edit_text('üìë–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –Ω–∞ –ª—é–±–æ–µ –∞–≤—Ç–æ. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¢–µ—Ö–æ—Å–º–æ—Ç—Ä –¥–ª—è –Æ–†, –§–ò–ó –ª–∏—Ü –∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω.\n\n–õ—é–±–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∞–≤—Ç–æ (A, B, C, D, –ü–†–ò–¶–ï–ü)\nüöñ–¢–∞–∫—Å–∏\nüöò–£—á–µ–±–Ω–∞—è –º–∞—à–∏–Ω–∞\n‚ö†Ô∏è–û–ø–∞—Å–Ω—ã–µ –≥—Ä—É–∑—ã\n\n\n‚è≥–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –¥–æ 1 —á–∞—Å–∞.', reply_markup=inspection_btn)
    elif choice == 'photoshop':
        photoshop_btn = await photoshop()
        await call.message.edit_text('–£–≤–∞–∂–∞–µ–º—ã–π –∞–≥–µ–Ω—Ç—ã !\n\nüì∏ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º —É—Å–ª—É–≥–∏ —Ñ–æ—Ç–æ—à–æ–ø - –¥–ª—è –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ - –Ω–∞ —É—Å–ª—É–≥—É –¢–ï–•–û–°–ú–û–¢–†  –±–µ–∑ –∑–∞–µ–∑–¥–∞ !\n\n–í—ã –ø—Ä–∏—Å—ã–ª–∞–µ—Ç–µ –Ω–∞–º —Ñ–æ—Ç–æ –Ω–∞ —É–ª–∏—Ü–µ\n\n–ú—ã –≤–∞–º –≤ –æ—Ç–≤–µ—Ç —Å–¥–µ–ª–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ—Ç–æ—à–æ–ø - –∏ –ø—Ä–∏—à–ª–µ–º –≤–∞—à–µ –∞–≤—Ç–æ - –Ω–∞ –ø—É–Ω–∫—Ç–µ –¢–û !', reply_markup=photoshop_btn)
    elif choice == 'casco':
        casco_btn = await casco()
        await call.message.edit_text('üè¶–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–ª–∏—Å–∞.\n\n1)–§–ò–û, –¥–∞—Ç–∞ —Ä–æ–∂-–Ω–∏—è, —Å–µ—Ä–∏—è –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞, –∫–µ–º –∫–æ–≥–¥–∞ –≤—ã–¥–∞–Ω, –∞–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∫–æ–Ω—Ç.–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n2)–õ–∏—Ü–∞ –¥–æ–ø—É—â–µ–Ω–Ω—ã–µ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é( –µ—Å–ª–∏ –Ω–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á.)–§–ò–û, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –í–£, —Å—Ç–∞–∂ –≤–æ–∂–¥–µ–Ω–∏—è.\n3)–ü–æ –¢–°: –º–∞—Ä–∫–∞, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, Vin, –ø—Ç—Å, –≥–æ—Å –Ω–æ–º–µ—Ä, –ª.—Å, —Ä–º–º.\n4)–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞.\n5)–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è.\n\n‚è≥–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –¥–æ 1 —á–∞—Å–∞.', reply_markup=casco_btn)
    elif choice == 'GIBDD':
        GIBDD_btn = await GIBDD()
        await call.message.edit_text('–ö–∞—Ä—Ç–∞ —É—á—ë—Ç–∞ –≥–æ—Å. –Ω–æ–º–µ—Ä–∞', reply_markup=GIBDD_btn)
    elif choice == 'GAI':
        GAI_btn = await GAI()
        await call.message.edit_text('–ö–∞—Ä—Ç–∞ –≤—É —Ñ–æ—Ç–æ –ø—Ä–∞–≤', reply_markup=GAI_btn)
    elif choice == 'find':
        find_btn = await find()
        await call.message.edit_text('–°–æ–ª—è—Ä–∏—Å –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –§–ò–û, –ì–û–î –†–û–ñ–î–ï–ù–ò–Ø', reply_markup=find_btn)
    elif choice == 'KBM':
        KBM_btn = await KBM()
        await call.message.edit_text('üè¶–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–±–º.\n\n1) –ù—É–∂–Ω—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω.\n2) –î–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü –∫–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è.\n\n‚è≥–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç 10 –¥–æ 15 –¥–Ω–µ–π', reply_markup=KBM_btn)
    elif choice == 'sellbuy':
        sellbuy_btn = await sellbuy()
        await call.message.edit_text('üè¶–î–ª—è –¥–æ–≥–æ–≤–æ—Ä –∫—É–ø–ª–∏ –ø—Ä–æ–¥–∞–∂–∏.\n\n1) –ì–æ—Ä–æ–¥\n2) –§–∏–æ\n3) –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è\n4) –ø–∞—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞ –ø—Ä–æ–ø–∏—Å–∫–∏\n5) –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ —Å—Ç—Å –ª–∏–±–æ –ø—Ç—Å\n6) —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–≤—Ç–æ —á–∏—Å–ª–∞\n\n‚è≥–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç 5 –¥–æ 10 –º–∏–Ω—É—Ç', reply_markup=sellbuy_btn)
    elif choice == 'TS':
        TS_btn = await TS()
        await call.message.edit_text('üè¶–î–ª—è —Å–Ω—è—Ç–∏–µ –¢–° —Å —É—á–µ—Ç–∞.\n\n1) –ü–∞—Å–ø–æ—Ä—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫–∞\n2) –ø—Ä–æ–ø–∏—Å–∫–∞\n3) –ø—Ç—Å —Å—Ç—Å 2 —Å—Ç–æ—Ä–æ–Ω\n4) –ø–∞—Å–ø–æ—Ä—Ç —Ç–æ–≥–æ –∫—Ç–æ –µ–µ –∫—É–ø–∏–ª —Ç–∞–∫ –∂–µ –ª–∏—Ü–µ–≤–∞—è\n‚è≥–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ—Ç 2 –¥–æ 8 —á–∞—Å–æ–≤', reply_markup=TS_btn)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
